# Variables globales
$ftpServer = ""
$ftpFilePath = ""
$localDirectory = "C:\archives"
$smtpServer = "smtp.gmail.com"
$smtpPort = 587
$emailFrom = "votreadresse@gmail.com"
$emailPassword = "votre_mot_de_passe_application"
$adminEmail = "efefebg@gmail.com"

# Fonction pour vérifier si le fichier existe sur le serveur FTP
function Validate-FTPFile {
    param (
        [string]$ftpServer,
        [string]$ftpFilePath
    )
    $uri = "$ftpServer/$ftpFilePath"
    try {
        $request = [System.Net.WebRequest]::Create($uri)
        $request.Method = "HEAD"
        $response = $request.GetResponse()
        $response.Close()
        return $true
    } catch {
        return $false
    }
}

# Demande à l'utilisateur les chemins FTP et fichier de destination
$ftpServer = Read-Host "Entrez l'adresse du serveur FTP (par exemple, ftp://172.29.229.246)"
do {
    $ftpFilePath = Read-Host "Entrez le chemin complet du fichier sur le serveur FTP (par exemple, /srv/ftp/monarchive.tar.gz)"
    if (-Not (Validate-FTPFile -ftpServer $ftpServer -ftpFilePath $ftpFilePath)) {
        Write-Host "Le fichier spécifié n'existe pas sur le serveur FTP. Veuillez réessayer." -ForegroundColor Red
    }
} while (-Not (Validate-FTPFile -ftpServer $ftpServer -ftpFilePath $ftpFilePath))

# Demande le nom du fichier local ou génère un nom par défaut
$date = Get-Date -Format "yyyy-MM-dd_HH-mm-ss"
$defaultFileName = "monarchive_$date.tar.gz"
$localFileName = Read-Host "Entrez le nom du fichier de destination (par défaut : $defaultFileName)"
if (-Not $localFileName) {
    $localFileName = $defaultFileName
}
$localFilePath = Join-Path -Path $localDirectory -ChildPath $localFileName

# Vérifie ou crée le dossier de destination
if (-Not (Test-Path -Path $localDirectory)) {
    try {
        New-Item -ItemType Directory -Path $localDirectory | Out-Null
        Write-Host "Dossier local créé : $localDirectory" -ForegroundColor Green
    } catch {
        Write-Error "Impossible de créer le dossier local : $_"
        exit 1
    }
}

# Fonction pour envoyer un e-mail
function Send-Email {
    param (
        [string]$subject,
        [string]$body
    )
    $message = New-Object System.Net.Mail.MailMessage
    $message.From = $emailFrom
    $message.To.Add($adminEmail)
    $message.Subject = $subject
    $message.Body = $body
    $smtp = New-Object System.Net.Mail.SmtpClient($smtpServer, $smtpPort)
    $smtp.EnableSsl = $true
    $smtp.Credentials = New-Object System.Net.NetworkCredential($emailFrom, $emailPassword)
    try {
        $smtp.Send($message)
        Write-Host "E-mail envoyé avec succès." -ForegroundColor Green
    } catch {
        Write-Error "Erreur lors de l'envoi de l'e-mail : $_"
    }
}

# Téléchargement du fichier depuis le serveur FTP
try {
    $uri = "$ftpServer/$ftpFilePath"
    Write-Host "Téléchargement en cours de : $uri" -ForegroundColor Yellow
    $webClient = New-Object System.Net.WebClient
    $webClient.DownloadFile($uri, $localFilePath)

    # Succès
    $subject = "Récupération réussie"
    $body = "Le fichier a été téléchargé avec succès depuis $uri vers $localFilePath."
    Send-Email -subject $subject -body $body
    Write-Host "Téléchargement réussi : $localFilePath" -ForegroundColor Green

} catch {
    # Gestion des erreurs
    $errorMessage = $_.Exception.Message
    $errorDetail = ""

    if ($errorMessage -like "*404*" -or $errorMessage -like "*Fichier introuvable*") {
        $errorDetail = "Le fichier demandé n'existe pas sur le serveur FTP."
    } elseif ($errorMessage -like "*Échec de connexion*" -or $errorMessage -like "*impossible de se connecter*") {
        $errorDetail = "Impossible de se connecter au serveur FTP. Vérifiez les identifiants ou la disponibilité du serveur."
    } elseif ($errorMessage -like "*Espace disque insuffisant*" -or $errorMessage -like "*accès refusé*") {
        $errorDetail = "Problème local : espace disque insuffisant ou permissions insuffisantes."
    } else {
        $errorDetail = "Erreur inconnue : $errorMessage"
    }

    $subject = "Récupération échouée"
    $body = "Le téléchargement du fichier depuis $uri a échoué. $errorDetail"
    Send-Email -subject $subject -body $body
    Write-Error "Erreur lors du téléchargement : $errorDetail"
}
